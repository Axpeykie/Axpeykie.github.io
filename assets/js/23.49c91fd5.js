(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{388:function(e,t,_){"use strict";_.r(t);var v=_(40),n=Object(v.a)({},(function(){var e=this,t=e.$createElement,_=e._self._c||t;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h2",{attrs:{id:"_1xx"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1xx"}},[e._v("#")]),e._v(" 1xx")]),e._v(" "),_("p",[e._v("1xx表示请求已被接受，但需要后续处理。例如：")]),e._v(" "),_("p",[e._v("100（Continue）\n客户端应继续发送请求。")]),e._v(" "),_("p",[e._v("101（Switching Protocols）\n需要切换协议，服务器通过的Upgrade响应头字段通知客户端。")]),e._v(" "),_("p",[e._v("HTML5引入的WebSocket便是这样工作的。首先客户端请求websocket所在的URL，服务器返回101，然后便建立了全双工的TCP连接。 注意Upgrade和Connection头字段属于Hop-by-hop字段，设置Websocket代理时需要继续设置这两个字段，而不是简单地转发请求。")]),e._v(" "),_("h2",{attrs:{id:"_2xx"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2xx"}},[e._v("#")]),e._v(" 2xx")]),e._v(" "),_("p",[e._v("请求已成功被服务器接收、理解、并接受。")]),e._v(" "),_("p",[e._v("200（OK）\n请求已成功，请求所希望的响应头或数据体将随此响应返回。")]),e._v(" "),_("p",[e._v("201（Created）\n请求已经被实现，而且有一个新的资源已经依据请求的需要而创建。在RESTFul风格的URL设计中，通常用来响应POST请求。")]),e._v(" "),_("p",[e._v("202（Accepted）\n服务器已接受请求，但尚未处理。比如POST一个资源应当返回201，但由于性能原因未能立即创建，可以返回202。")]),e._v(" "),_("p",[e._v("204（No Content）\n服务器成功处理了请求，但不需要返回任何实体内容，204响应禁止包含任何消息体。浏览器收到该响应后不应产生文档视图的变化。")]),e._v(" "),_("p",[e._v("205（Reset Content）\n服务器成功处理了请求，但不需要返回任何实体内容，205响应禁止包含任何消息体。 与204不同的是，返回此状态码的响应要求请求者重置文档视图。比如用户刚刚提交一个表单，返回205后页面重置，用户可以立即填写下一个表单。")]),e._v(" "),_("p",[e._v("206（Partial Content）\nHTTP协议允许分片传输。请求头中包含Range字段时，响应需要只返回Range指定的那一段。响应中应包含Content-Range来指示返回内容的范围。")]),e._v(" "),_("p",[e._v("其他\n203（Non-Authoritative Information）\n207（Multi-Status）")]),e._v(" "),_("h2",{attrs:{id:"_3xx"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3xx"}},[e._v("#")]),e._v(" 3xx")]),e._v(" "),_("p",[e._v("这类状态码代表需要客户端采取进一步的操作才能完成请求。通常，这些状态码用来重定向， 重定向目标在本次响应的Location头字段中指明。")]),e._v(" "),_("p",[e._v("301（Moved Permanently）\n被请求的资源已永久移动到新位置，并且将来任何对此资源的引用都应该使用本响应返回的若干个URI之一。如果该请求不是GET/HEAD， 浏览器通常会要求用户确认重定向。")]),e._v(" "),_("p",[e._v("301通常用于网站迁移时，服务器对旧的URL进行301重定向到新的URL。这样搜索引擎可以正确地更新原有的页面排名等信息。")]),e._v(" "),_("p",[e._v("302（Found）\n请求的资源现在临时从不同的URI响应请求。除非指定了Cache-Control或Expires，否则该响应不可缓存。 如果当前请求非HEAD或GET，浏览器需取得用户确认，再进行重定向。")]),e._v(" "),_("p",[e._v("这很好理解，因为上下文发生了变化，比如POST请求不是幂等的。")]),e._v(" "),_("p",[e._v("303（See Other）\n对应当前请求的响应可以在另一个URI上被找到，而且客户端应当采用GET的方式访问那个资源。 这个方法的存在主要是为了允许由脚本激活的POST请求输出重定向到一个新的资源。 303响应禁止被缓存。")]),e._v(" "),_("p",[e._v("303会使得浏览器直接GET那个资源，不需用户同意。这是Web应用中最常见的重定向方式。")]),e._v(" "),_("p",[e._v("304（Not Modified）\n如果客户端发送了一个带条件的GET请求且该请求已被允许，而文档的内容（自上次访问以来或者根据请求的条件）并没有改变。 304响应禁止包含消息体。")]),e._v(" "),_("p",[e._v("304响应也是一种缓存机制。Web服务器对静态资源文件通常会采取缓存，因此在Web开发中你可以看到大量的304响应。 服务器给出的相应中通常会包含Etag来标识资源ID，比如：")]),e._v(" "),_("p",[_("code",[e._v('ETag: "686897696a7c876b7e"')])]),e._v(" "),_("p",[e._v("客户端在下次访问同一URL时会设置头字段If-None-Match（这是一个请求条件）：")]),e._v(" "),_("p",[_("code",[e._v('If-None-Match: "686897696a7c876b7e"')])]),e._v(" "),_("p",[e._v("服务器返回资源前会判断Etag是否与客户端提供的If-None-Match匹配，如果匹配则说明资源未发生改变，此时应返回304.")]),e._v(" "),_("p",[e._v("关于HTTP缓存的讨论\n除了使用ETag/If-None-Match/If-Match通过文件内容来缓存外，还可以使用Last-Modified/If-Modified-Since通过文件修改时间来进行缓存。 这两者都需要客户端再次发送HTTP请求，如果文件未发生改变，服务器返回304。")]),e._v(" "),_("p",[e._v("而另外一种缓存策略Expires/Cache-Control则可以让客户端避免再次发送请求。一般会优先使用Cache-Control，它能够更加精细地控制缓存策略。")]),e._v(" "),_("p",[e._v("其他\n300（Multiple Choices）\n305（Use Proxy）\n307（Temporary Redirect）")]),e._v(" "),_("h2",{attrs:{id:"_4xx"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4xx"}},[e._v("#")]),e._v(" 4xx")]),e._v(" "),_("p",[e._v("这类的状态码代表了客户端看起来可能发生了错误，妨碍了服务器的处理。 除非响应的是一个HEAD请求，否则服务器就应该返回一个解释当前错误状况的实体。")]),e._v(" "),_("p",[e._v("400（Bad Request）\n由于包含语法错误，当前请求无法被服务器理解。400通常在服务器端表单验证失败时返回。")]),e._v(" "),_("p",[e._v("401（Unauthorized）\n当前请求需要用户验证，响应中会包含一个WWW-Authenticate字段来询问用户的授权信息。 而客户端的下次请求需要提供包含Authorization头的请求。")]),e._v(" "),_("p",[e._v("HTTP Basic Auth就是这样实现的。当服务器返回401时浏览器会弹出窗口：")]),e._v(" "),_("p",[e._v("basic auth")]),e._v(" "),_("p",[e._v("输入验证信息并点击确定，浏览器会根据你的输入填写Authorization头并重新发送请求。对于Basic Auth看起来是这样的：")]),e._v(" "),_("p",[e._v("Authorization:Basic eWFuZ2p2bjp5YW5nanZuaGFydA==\n403（Forbidden）\n服务器已经理解请求，但是拒绝执行它。与401响应不同的是，身份验证并不能提供任何帮助。")]),e._v(" "),_("p",[e._v("403和401一样，需要在相应消息体中需要给出原因。除非是一个HEAD请求。")]),e._v(" "),_("p",[e._v("通常用于服务器已经知道用户的身份的情况。比如从请求的Cookie得到的Session中可以得知当前用户无权进行该操作。 通常的Web应用中，对于401的情况应当重定向至登录页面，403的情况应当直接告知错误（这属于前端Bug）。")]),e._v(" "),_("p",[e._v("404（Not Found）\n这太常见了。就是请求所希望得到的资源未被在服务器上发现。")]),e._v(" "),_("p",[e._v("当通常用于当服务器不想揭示到底为何请求被拒绝时，比如应当返回500时服务器不愿透露自己的错误。")]),e._v(" "),_("p",[e._v("405（Method Not Allowed）\n请求行中指定的请求方法不能被用于请求相应的资源。")]),e._v(" "),_("p",[e._v("在Web开发中通常是因为客户端和服务器的方法不一致，比如客户端通过PUT来修改一个资源，而服务器把它实现为POST方法。 开发中统一规范就好了。")]),e._v(" "),_("p",[e._v("413（Request Entity Too Large）\n服务器拒绝处理当前请求，因为该请求提交的实体数据大小超过了服务器愿意或者能够处理的范围。")]),e._v(" "),_("p",[e._v("一般的服务器都会设置HTTP请求消息体的最大长度，当然这是一种阻挡攻击的手段。 例如你在使用HTTP方式来访问Git仓库，如果你在仓库中加入了大的二进制文件（通常为目标文件或多媒体文件）， 在Push时服务器很可能会返回413错误。如果切换为ssh协议就不会有这样的问题了，服务器只能限制整个仓库的大小。")]),e._v(" "),_("p",[e._v("414（Request-URI Too Large）\n当URI太长时，服务器可以返回414. 当HTTP协议并未规定URI应当有多长。这取决于浏览器和服务器的设置， 在服务器中当然你想设置多长都可以，但是浏览器是你决定不了的，而且不同的厂商在采用不同的长度限制，可以认为最短的是2K：")]),e._v(" "),_("p",[e._v("The limit is in MSIE and Safari about 2KB, in Opera about 4KB and in Firefox about 8KB, (255 bytes if we count very old browsers) .")]),e._v(" "),_("p",[e._v("当然URI长度的这一点限制会使得HTTP GET方法的能力有限，不能传输超过2K的数据。另外因为GET方法的所有数据都体现在URI上， 对于用户是可见的。这一点不太安全。")]),e._v(" "),_("p",[e._v("其实HTTP GET传输数据理论上并不比POST安全更多，因为POST的Entity Body也是明文传输的。只是GET的数据用户直接可见而已。")]),e._v(" "),_("p",[e._v("其他\n402（Payment Required）\n406（Not Acceptable）\n407（Proxy Authentication Required）\n408（Request Time-out）\n409（Conflict）\n410（Gone）\n411（Length Required）\n412（Precondition Failed）\n415（Unsupported Media Type）\n416（Requested range not satisfiable）\n417（Expectation Failed）")]),e._v(" "),_("h2",{attrs:{id:"_5xx"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5xx"}},[e._v("#")]),e._v(" 5xx")]),e._v(" "),_("p",[e._v("这类状态码代表了服务器在处理请求的过程中有错误或者异常状态发生，也有可能是服务器意识到以当前的软硬件资源无法完成对请求的处理。 并且响应消息体中应当给出理由，除非是HEAD请求。")]),e._v(" "),_("p",[e._v("500（Internal Server Error）\n通常是代码出错，后台Bug。一般的Web服务器通常会给出抛出异常的调用堆栈。 然而多数服务器即使在生产环境也会打出调用堆栈，这显然是不安全的。")]),e._v(" "),_("p",[e._v("502（Bad Gateway）\n作为网关或者代理工作的服务器尝试执行请求时，从上游服务器接收到无效的响应。")]),e._v(" "),_("p",[e._v("如果你在用HTTP代理来翻墙，或者你配置了nginx来反向代理你的应用，你可能会常常看到它。")]),e._v(" "),_("p",[e._v("504（Gateway Time-out）\n作为网关或者代理工作的服务器尝试执行请求时，未能及时从上游服务器收到响应。")]),e._v(" "),_("p",[e._v("注意与502的区别：502是接收到了无效响应比如Connection Refused； 504是响应超时，通常是被墙了。")]),e._v(" "),_("p",[e._v("很多国外站点都会使用CDN来Serve静态文件，但我大中华墙掉了一些CDN。导致这些资源文件的请求会一直处于Pending状态直到超时。 表现为浏览器显示空白页面，长时间处于等待状态。这时在控制台看到HTML已经载入了就可以点击停止按钮了，停止载入那些资源。 页面会立即显示出来，虽然样式和交互可能有问题。")]),e._v(" "),_("p",[e._v("说到这里想吐槽GFW简直没有行业道德，即使不允许我们访问也返回一个错误嘛，不要让浏览器一直处于等待的状态。")])])}),[],!1,null,null,null);t.default=n.exports}}]);